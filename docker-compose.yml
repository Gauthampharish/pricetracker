version: '3.8'

services:
  web:
    build: .
    container_name: price_tracker_web
    ports:
      - "8000:8000"
    volumes:
      - .:/PRICE_TRACKER
    environment:
      - DEBUG=True
      - EMAIL_USER=your_smtp_user
      - EMAIL_PASSWORD=your_smtp_password
      - EMAIL_HOST=smtp.your-email-provider.com
      - EMAIL_PORT=587
      - POSTGRES_DB=your_database_name
      - POSTGRES_USER=meity1234
      - POSTGRES_PASSWORD=meity1234
      - POSTGRES_HOST=localhost
      - POSTGRES_PORT=5432
      # Celery settings
      - CELERY_BROKER_URL=redis://redis1:6379/1
      - CELERY_RESULT_BACKEND=redis://redis1:6379/1
      - CELERY_ACCEPT_CONTENT=json
      - CELERY_TASK_SERIALIZER=json
      - CELERY_RESULT_SERIALIZER=json
      - CELERY_TIMEZONE=UTC

      # Redis Cache settings
      - REDIS_URL=redis://redis0:6379/0
    depends_on:
      - redis0
      - redis1
      # - db

  redis0:
    image: redis:6
    restart: always
    container_name: price_tracker_redis0
    ports:
      - "6379:6379"
  
  redis1:
    image: redis:6
    restart: always
    container_name: price_tracker_redis1
    ports:
      - "6380:6379"  # Expose redis1 on a different port on the host

#   db:
#     image: postgres:13
#     restart: always
#     container_name: price_tracker_db
#     environment:
#       - POSTGRES_DB=price_tracker_db
#       - POSTGRES_USER=price_tracker_user
#       - POSTGRES_PASSWORD=your_postgres_password
#     ports:
#       - "5432:5432"
#     volumes:
#       - postgres_data:/var/lib/postgresql/data

# volumes:
#   postgres_data: